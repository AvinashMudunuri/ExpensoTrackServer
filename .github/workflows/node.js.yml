# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

env:
  PORT=3000
  NODE_ENV=test
  JWT_SECRET="expensotrack"
  MONGODB_URI_PROD='mongodb+srv://amudunuri:RXVXMAGfvg4L1yXU@expensecluster.dyqqo0p.mongodb.net/ExpensoTrack'
  MONGODB_URI_DEV='mongodb+srv://amudunuri:RXVXMAGfvg4L1yXU@expensecluster.dyqqo0p.mongodb.net/ExpensoTrack_dev'
  MONGODB_URI_TEST='mongodb+srv://amudunuri:RXVXMAGfvg4L1yXU@expensecluster.dyqqo0p.mongodb.net/ExpensoTrack_test'
  REDIS_HOST='redis-18961.c264.ap-south-1-1.ec2.redns.redis-cloud.com'
  REDIS_PORT=18961
  REDIS_PASSWORD='wh6RsqGLH1FAagEW2Ny66jwnHuDHHKMI'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
